services:
  postgres:
    image: postgres:15-alpine
    container_name: creattive_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: creattive
      POSTGRES_PASSWORD: creattive_password
      POSTGRES_DB: creattive_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U creattive -d creattive_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - creattive_network

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: creattive_backend
    restart: unless-stopped
    environment:
      # Variáveis do Banco de Dados
      DATABASE_URL: postgresql://creattive:creattive_password@postgres:5432/creattive_db?schema=public

      # Variáveis de Autenticação
      JWT_SECRET: 8d1f23a456b789c0e1f2g3h4i5j6k7l8m9n0p
      ADMIN_USERNAME: admin
      ADMIN_PASSWORD: admin123

      # Variáveis do Servidor
      PORT: 3001
      NODE_ENV: development
      FRONTEND_URL: http://localhost:3000

      # Variáveis de Upload
      MAX_FILE_SIZE: 2097152
      UPLOAD_PATH: public/uploads
    ports:
      - "3001:3001"
    volumes:
      - ./apps/backend:/app
      - /app/node_modules
      - uploads_data:/app/public/uploads
    user: "node"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - creattive_network

  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    container_name: creattive_frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - creattive_network

networks:
  creattive_network:
    driver: bridge

volumes:
  postgres_data:
  uploads_data:
    driver: local
